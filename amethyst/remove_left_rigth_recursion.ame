# Copyright (C) Ondrej Bilka <neleai@seznam.cz> 2012

#removing by Paull algorithm

#TODO iteration

amethyst Remove_Left_Recursion < Traverser_Clone2 {
  root =  .:a  {a.dup}=>Rule[ {@>name=@name} {@@result=Local["_result",@bnding]} @body:oldbody (@body=>first(false)):first (@body=>first(true)):follow
                {@body = Seq[first,Many[Or[Seq[Act[Args[locals_in(oldbody).map{|l| (l=="_result") ? [] : [Local[l,@bnding],"=nil;"]}.flatten ]],follow],Stop[]]],Act[[";",@@result]]] if @@left_rec}
                {@self}
              ]

  
  must_empty = .:e &{must_empty?(e)} {e}

  first(follow) = Bind[ .=>first(follow):expr {Bind[@name,expr]} ]
                | Seq[ must_empty:first    .*:rest {Seq[rest]}=>first(follow):rest] -> Seq[first,rest]
                | Seq[ first(follow):first .*:rest ]                                -> Seq[first,rest]
                | Or[  first(follow)*:ary ]                     -> Or[ary]
                | Apply[&{@>name==@name} .* {@@left_rec=true}]  -> follow ? @@result       : Apply["fails"]
                | .:x                                           -> follow ? Apply["fails"] : x

}


