amethyst Detect_Variables < AmethystOptimizer {
  trans = Rule[{@@argnames=[]}:argnames {@@locals=[]} @name:name  @args=>[addargs]:args  @body=>trans:body {@@locals.uniq}:locals {locals.each{|l| body=And[Set[{:name=>l,:expr=>Act["nil"] }],body] };} ] @Rule
        | Resul[@name:name @args=>args:args {@@locals.select{|a| !a.is_a? Autovar}.uniq}:vars] @Resul
				| Set[   @name:name {@@locals<<name} @expr=>trans:expr] @Set
				| Append[@name:name {@@locals<<name} @expr=>trans:expr] @Append
        | super

	addargs= Args[ :name {@@argnames<<name;Variable[name] }:result[] ]* -> result
}
