def first(s)
	if s.is_a? Or
		a=[]
		s.ary.each{|e| a+=first(e)}
		return a.uniq
	end
	if s.is_a?(Apply) && s[0]=="seq"
		[s[1][0][14].chr]
	end
end

amethyst Detect_Switch < Traverser {
	root = traverse

	visit = Or[{Hash.new{|h,k|h[k]=[]} }:ary2
		(traverse_item:e &{first(e)} {puts e.inspect} { first(e).each{|a| ary2[a]<<e}})*
		{Switch[{:ary=>ary2.to_a.map{|h,k| [h,Or[{:ary=>k}]]} }]}
	]
}
