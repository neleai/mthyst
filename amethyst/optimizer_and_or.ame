
amethyst Seq_Or_Optimizer < Traverser{
	itrans =   (Grammar[ @rules=>[ Rule[root]*:rules ] {@rules=rules} @self] | .)*

	root = traverse
  
  visit = Seq[traverse[.* {Seq[{:ary=>@ary}]}] ]
				| Or[traverse[.* {Or[{:ary=>@ary}]}] ]
				| Apply[ .:name &{name=="apply"}  {puts @self.inspect} .:arg &{arg.is_a?(CAct)} { Apply[arg[0][13...-2]]} ]
				| Apply[ .:name &{name=="apply"}  .:arg &{arg.is_a?(Act) && arg[0].is_a?(Exp)} {arg[0][0]} ]

}
