amethyst Traverser {
	traverse_item = visit:a  {@@changed=true} {a}
                      | Array[ traverse_item* ]
											| AmethystAST[ traverse ]
											| .
	traverse = .*
        	@this:this
					{(@this.instance_variables).map{|v| [v,@this.instance_variable_get(v)] }}=>[
			  		[ :key  traverse_item:{@this; this.instance_variable_set(key,it)} ]* 
					]
					@this
}


amethyst Seq_Or_Optimizer < Traverser{
	root = traverse
	
	visit = Seq[ traverse {@this.ary=@ary.map{|i| (i.is_a?(Seq)) ? i.ary : i}.flatten.select{|e| !(e.is_a?(Act) && e.ary.size==0)}} {(@ary.size==1) ? @ary[0] : @this} ]
				| Or[  traverse {@this.ary=@ary.map{|i| (i.is_a?(Or )) ? i.ary : i}.flatten.select{|e| !(e.is_a?(Act) && e.ary.size==0)}} {(@ary.size==1) ? @ary[0] : @this} ]
}
