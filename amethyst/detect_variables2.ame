amethyst Analyze_Variables2 < Traverser {
	itrans =   (Grammar[ @rules=>[ Rule[root:rules[]]* ] {@rules=rules} @this] | .):ary[]  ->ary
  root = @this=>Rule[  {@@variables=Hash.new{|k,v| k[v]=v} ;i=0;(@locals+@args).each{|v| v.no=i;i+=1;@@variables[v[0]]=v}} {@@locals=@locals} traverse {puts @@locals.inspect; @body=Seq[{:ary=>((@locals-@args).map{|v| Set[{:name=>v,:expr=>Act["nil"],:append=>false}]}+[@body]) }]} @this]

	visit = Args[ traverse {@ary=@ary.map{|a| @@variables[a] }}  @this]
				|  Result[ {@vars=@@locals.select{|a| @vars.include? a[0].to_sym}.uniq} @this]
}
