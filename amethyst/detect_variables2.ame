amethyst Analyze_Variables2 < Traverser {
	itrans =   (Grammar[ @rules=>[ Rule[root]*:rules ] {@rules=rules} @this] | .)*
  root = @this=>Rule[  {@@variables=Hash.new{|k,v| k[v]=v} ;(@locals+@args).each{|v| @@variables[v]=Local[v,@this] if v.is_a?(String)}} {@@locals=@locals.map{|l|@@variables[l]}} traverse  {@args=@args.map{|a| @@variables[a]}} {@body=Seq[{:ary=>((@@locals-@args).map{|v| Set[{:name=>@@variables[v],:expr=>Act["nil"]}]}+[@body]) }]} @this]

	visit = Set[ traverse {@name=@@variables[@name]} @this]
				| Args[ traverse {@ary=@ary.map{|a| @@variables[a] };@ary=connectstring(@ary)}  @this]
				| Result[ {@vars=@@locals.select{|a| @vars.include? a[0].to_sym}.uniq} @this]
}
