def shadow(body,args)
	args.each{|arg| a=autovar; body=And[Set[{:name=>a,:expr=>Act[arg]}],body,Set[{:name=>arg,:expr=>Act[a]}]]}
	body
end
amethyst Inliner < AmethystOptimizer {

 inline(rule,grammar)= {rule}=>Rule[@name:name @args:args @locals:locals @body:body]  {@@name=name;@@args=args;@@body=shadow(body,locals)} {grammar}=>itrans
 
 trans = Apply[:name &{name==@@name} arg*:args] -> puts "inlining"; body=@body; args.each_index{|i| body=And[Set[{:name=>@args[i],:expr=>Act[args[i]]}],body] } ; shadow(body,@args)
       | {super}

 test= inline(Rule[{:name=>"a",:locals=>["a","b"],:args=>["x"],:body=>And[Act["aueo"],Set[{:name=>autovar,:expr=>Act["a"]}],Many[{:ary=>[Act["aueo"]],:o=>autovar}]]}])

	inlineit = :name :grammar inline(name,grammar)
}
