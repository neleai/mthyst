amethyst Renamer2 < Traverser {
	root = Rule[{@@newvars={}} traverse]
	
	visit = Local[ :name @self:this ]  -> @@newvars[this] ? @@newvars[this] : ($av+=1; @@newvars[this]=_Local(name,$av) ;@@newvars[this] )
}

amethyst DetectCalls < Traverser {
	root = Rule[{@@calls={}} traverse {@@calls} ]
	
	visit = Apply[:name .*:args {@@calls[name]=true } @self]
}

amethyst Inliner2 < Traverser {
	
	root = :from :to {from}=>Rule[@name:name @args:args @locals:locals @body:body]  {@@name=name;@@args=args;@@body=body } 
				 {to}=>Rule[traverse]
 
 visit = Apply[:name &{name==@@name} .*:args] ->  body=@@body;puts args.inspect; args.each_index{|i| body=Seq[Set[{:name=>@@args[i],:expr=>Act[args[i]]}],body] } ; body
}
