amethyst Renamer < Traverser {
	root = Rule[{@@newvars={}} traverse]
	
	visit = Variable[ :name @this:this ]  -> @@newvars[this] ? @@newvars[this] : ($av+=1; @@newvars[this]=_Variable(name,$av) ;@@newvars[this] )
}

amethyst Inliner2 < Traverser {
	
	root = :from :to {Renamer.new.parse(:root, [from])}=>Rule[@name:name @args:args @locals:locals @body:body]  {@@result=autovar;@@name=name;@@args=args;@@body=Set[{:name=>@@result ,:expr=>body}] } 
				 {to}=>Rule[traverse]
 
 visit = Apply[:name &{name==@@name} arg*:args] ->  body=@@body; args.each_index{|i| body=And[Set[{:name=>@@args[i],:expr=>Act[args[i]]}],body] } ; And[body,Act[@@result]]
}
