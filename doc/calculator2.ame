makeclasses(AmethystAST,["Add",:x,:y],["Substract",:x,:y],["Multiply",:x,:y],["Divide",:x,:y])
# Amethyst_AST create method rougthy does following
# Add.create(hash)
# a=Add.new
# a.x=hash[:x]
# a.y=hash[:y]
# ... for each defined attribute.
amethyst Calculator {
calculate = addexpr
addexpr = addexpr:x "+" mulexpr:y @Add
| addexpr:x "-" mulexpr:y @Substract
| mulexpr
mulexpr = mulexpr:x "*" int:y @Multiply
| mulexpr:x "/" int:y @Divide
| "(" addexpr:x ")" -> x
| int
}
print Calculator.calculate("2-4+2*2--2").inspect
#-> Substract[{:x=>
#                 Add[{:x=>Substract[{:x=>2, :y=>4}], 
#                      :y=>Multiply[{:x=>2, :y=>2}]}], 
#               :y=>-2}]

