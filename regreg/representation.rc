#include "ruby.h"
#include "stack_machine.h"
char **nodes_string; long nodes_string_no;
char * normalize_string(char *s){ int i;
  for(i=0;i<nodes_string_no;i++){ if (!strcmp(s,nodes_string[i])) return nodes_string[i];}
  nodes_string_no+=1; 
  if(!(nodes_string_no&(nodes_string_no-1))) nodes_string=realloc(nodes_string,2*sizeof(char *)*nodes_string_no);
  nodes_string[nodes_string_no-1]=strdup(s);
  return nodes_string[nodes_string_no-1];
}
array **nodes_array; long nodes_array_no;
array * normalize_array(array *a){ int i,j;
  for(i=0;i<nodes_array_no;i++){ if(a->size!=nodes_array[i]->size) goto next; for(j=0;j<a->size;j++) if (nodes_array[i]->ary[j]!=a->ary[j]) goto next; return nodes_array[i];next:;}
  nodes_array_no+=1;
  if(!(nodes_array_no&(nodes_array_no-1))) nodes_array=realloc(nodes_array,2*sizeof(array *)*nodes_array_no);
  nodes_array[nodes_array_no-1]=a;
  return nodes_array[nodes_array_no-1];
}

<% require 'types.rb'%>
<%= $nodes.map{|n,a| "exp_#{n} *nodes_#{n};long nodes_#{n}_no;\n"}*"" %>
<%= $nodes.map{|n,a| "exp_#{n} *normalize_#{n}(exp_#{n} *o){int i;
  for(i=0;i<nodes_#{n}_no;i++){ if (1 #{a.map{|t,v| "&& nodes_#{n}[i].#{v}==o->#{v}"}}) return &nodes_#{n}[i]; }
  if(!(nodes_#{n}_no&(nodes_#{n}_no-1))) nodes_#{n}=realloc(nodes_#{n},(1+nodes_#{n}_no)*2*sizeof(exp_#{n}));
  nodes_#{n}[nodes_#{n}_no].tp=TP_#{n};#{a.map{|t,v| "nodes_#{n}[nodes_#{n}_no].#{v}=o->#{v};"}*""}  nodes_#{n}_no+=1; return &nodes_#{n}[nodes_#{n}_no-1];} " }*""%>
void init_nodes(){
  nodes_string=NULL;nodes_string_no=0;
  nodes_array=NULL;nodes_array_no=0;
  <%= $nodes.map{|n,a| "nodes_#{n}=NULL;nodes_#{n}_no=0;"}*"" %>
}

