#include "ruby.h"
#include "stackmachine.h"
char **nodes_string; long nodes_string_no;
char * normalize_string(char *s){ int i;
  for(i=0;i<nodes_string_no;i++){ if (!strcmp(s,nodes_string[i])) return nodes_string[i];}
  nodes_string_no+=1; 
  nodes_string[nodes_string_no-1]=strdup(s);
  return nodes_string[nodes_string_no-1];
}
exp ***nodes_array; long *nodes_array_size; long nodes_array_no;
exp ** normalize_array(exp **array,long size){ int i,j;
  for(i=0;i<nodes_array_no;i++){ if(size!=nodes_array_size[i])continue; for(j=0;j<size;j++) if (nodes_array[i][j]!=array[j]) continue; return nodes_array[i];}
  nodes_array[nodes_array_no]=array; nodes_array_size[nodes_array_no]=size;
  nodes_array_no+=1;
  return nodes_array[nodes_array_no-1];
}

<% require 'types.rb'%>
<%= $nodes.map{|n,a| "exp_#{n} *nodes_#{n};long nodes_#{n}_no;\n"}*"" %>
<%= $nodes.map{|n,a| "exp_#{n} *normalize_#{n}(exp_#{n} *o){int i;
  for(i=0;i<nodes_#{n}_no;i++){ if (#{a.map{|t,v| "nodes_#{n}[i].#{v}==o->#{v}"}*"&&"}) return nodes_#{n}; }
  nodes_#{n}[nodes_#{n}_no].tp=TP_#{n};#{a.map{|t,v| "nodes_#{n}[nodes_#{n}_no].#{v}=o->#{v};"}*""}  nodes_#{n}_no+=1; return &nodes_#{n}[nodes_#{n}_no-1];} " }*""%>
void init_nodes(){
  nodes_string=malloc(10000);
  nodes_array=malloc(10000);nodes_array_size=malloc(10000);
  <%= $nodes.map{|n,a| "nodes_#{n}=malloc(10000);"}*"" %>
}
