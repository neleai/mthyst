implicit variables
persistence
optimizer simplifying =>[ ] to []
split to separate parser and traverser 
split to traverser and modifier and dataflow_analyzer
make AmethystModule +include to mimic ruby module
parser to produce literal tree and convert to abstract tree
make position handling explicit as in amethyst/position.ame

generic parent(Class) in tree traversal

variable cget,cset,rbget,rbset or some other generalization
consider pseudovariables

work in 1.9.1
bind cut,stop to corresponding many,or
code motion of acts

documentation

unify lambda+rule in ctranslator2
rewrite using backtracking,repeat until...
continuation passing style

initialize parse by Pass

switch and predication by constant propagation?

consider left factor when conditions are in inclusion.

optimalization of lookaheads such that in anything* ~anything the ~anything is automaticaly satisfied(aka eof)
in ~space space* the  space* must be empty 
Do it by constant propagation?

dont duplicate rules that dont refer to overwritten rule

hashes with different equalization

adaptive dataflow
think about suitable decomposition

dataflow cantfail, noresult

saner handling of Locals

detects also rules in parent that call but are not called

predicate,cut,stop,comment do not return value

move switch into pipeline
detect_switch char intervals
negation in switch
defer alternatives of classwitch to ctranslator2
merge identical options of detect_switch in normalize
predication by splitting to predicated and notpredicated part

equalization of bind
name immutability and equalization and use it in lattices

operator for case insensivity

bind expr in ary instead in @expr

serialization

support for provable refactorization and migrations

strings by boyer-moore like approach
indexing from end
