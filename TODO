implicit variables
persistence
optimizer simplifying =>[ ] to []
split to separate parser and traverser 
make AmethystModule +include to mimic ruby module
parser to produce literal tree and convert to abstract tree
make position handling explicit as in amethyst/position.ame

generic parent(Class) in tree traversal

variable cget,cset,rbget,rbset or some other generalization
consider pseudovariables

work in 1.9.1
bind cut,stop to corresponding many,or
code motion of acts and binds

documentation

unify lambda+rule in ctranslator2
rewrite using backtracking,repeat until...
continuation passing style

switch and predication by constant propagation?

consider left factor when conditions are in inclusion.

optimalization of lookaheads such that in anything* ~anything the ~anything is automaticaly satisfied(aka eof)
in ~space space* the  space* must be empty 
Also unbounded .* is move to end of object.
Do it by constant propagation?

adaptive dataflow
think about suitable decomposition

dataflow cantfail, noresult

saner handling of Locals

predicate,cut,stop,comment do not return value

move switch into pipeline
predication by splitting to predicated and notpredicated part

serialization
incremental compilation

support for provable refactorization and migrations

strings by boyer-moore like approach
indexing from end

operator for case insensivity

, in Acts

copy propagation
Constant propagation also do value numbering to register renaming scheme.

analysis what objects can be saved on stack

do not propagate constants to Result

replace({"a"=>"b","c"=>"d"})
